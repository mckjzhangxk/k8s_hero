apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    prometheus: brtc-k8s-rules
    role: alert-rules
  name: brtc-alert-rules
  namespace: brtc-monitor
spec:
  groups:
  - name: simpleDown
    rules:
    # Alert for any instance that is unreachable for >5 minutes.
    - alert: InstanceDown
      expr: up == 0
      for: 10s
      labels:
        severity: page
      annotations:
        summary: "Instance {{ $labels.instance }} down"
        description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 5 minutes."
  - name: node_metrics.bandwidth.down
    rules:
      - alert: node_metrics.bandwidth.down
        expr: rate(node_network_receive_bytes_total[1m]) * 8 / 1024 / 1024 > 250
        for: 1m
        labels:
          severity: 普通
          tpl: node_metrics.bandwidth.down
        annotations:
           rule: 流入带宽超过 250Mb,持续 1m
           summary: "{{ $labels.instance }}:机器流入带宽告警"
           value: "{{ printf  $value }}"
  - name: node_metrics.bandwidth.up
    rules:
      - alert: node_metrics.bandwidth.up
        expr: rate(node_network_transmit_bytes_total[1m]) * 8 / 1024 / 1024 > 250
        for: 1m
        labels:
          severity: 普通
          tpl: node_metrics.bandwidth.up
        annotations:
          rule: 流出带宽超过 250Mb,持续 1m
          summary: "{{ $labels.instance }}:机器流出带宽告警"
          value: "{{ printf $value }}"
  - name: node_metrics.cpu
    rules:
      - alert: node_metrics.cpu
        expr: (1 - sum by (hostname, env, group) (increase(node_cpu_seconds_total{mode="idle"}[1m])) / sum by (hostname, env, group) (increase(node_cpu_seconds_total[1m]))) * 100 > 70
        for: 5m
        labels:
          severity: 普通
          tpl: node_metrics.cpu
        annotations:
          rule: CPU 使用率超 70%, 持续 5m
          summary: "{{ $labels.instance }}:机器节点CPU告警"
          value:  "{{ printf $value }}"
  - name: node_metrics.disk
    rules:    
      - alert: node_metrics.disk
        expr: ((node_filesystem_size_bytes{mountpoint!~"(.*docker.*|.*smb_contract.*)"} - node_filesystem_avail_bytes{mountpoint!~"(.*docker.*|.*smb_contract.*)"}) / node_filesystem_size_bytes{mountpoint!~"(.*docker.*|.*smb_contract.*)"} * 100) > 70
        for: 2m
        labels:
          severity: 普通
          tpl: node_metrics.disk
        annotations:
          rule: 磁盘使用率超 70%, 持续 2m
          summary: "{{ $labels.instance }}:机器节点磁盘告警"
          value:  "{{ printf $value }}"
  - name: node_metrics.memory
    rules:
    - alert: node_metrics.memory
      expr: 100 - ((node_memory_MemAvailable_bytes * 100) / node_memory_MemTotal_bytes) > 80
      for: 2m
      labels:
        severity: 普通
        tpl: node_metrics.memory
      annotations:
        rule: 内存使用率超 80%, 持续 2m
        summary: "{{ $labels.instance }}:机器节点内存告警"
        value: "{{ printf $value }}"
  - name: probe.node_exporter
    rules:
      - alert: probe.node_exporter
        expr: up{job="node_exporter_sd"} == 0
        for: 1m
        labels:
          severity: 普通
          tpl: probe.node_exporter
        annotations:
            info: "{{ $labels.instance }} 网络不通"
            rule: node_exporter 网络不通, 持续 1m
            summary: 探针NodeExporter告警
            value: "0"
  - name: pod_restart
    rules:
      - alert: pod_restart
        expr: time()-kube_pod_start_time<120
        for: 5s
        labels:
          severity: 普通
          envname: "jingdong"
          podname: "{{ $labels.pod }}"
          tpl: pod_restart
        annotations:
            summary: '【{{$labels.namespace}}】:【{{ $labels.pod }}】 {{ printf "%0.0f" $value }} 秒前重启'