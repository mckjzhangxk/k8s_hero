kubectl run  sa-pod --image=nginx  --restart=Never
kubectl run  sa-pod --image=nginx  --as sazhang


//获得用户的token
kubectl get secret sazhang-token-4smj8 -o jsonpath='{.data.token}'|base64 -d

//设置用户sazhang
kubectl config set-credentials sazhang --token=$(kubectl get secret sazhang-token-4smj8 -o jsonpath='{.data.token}'|base64 --d)

kubectl config set-context sa-context --user=sazhang --cluster=kubenetes

kubectl get nodes --show-labels



//配置相关
kubectl --kubeconfig ./kubeconfig config get-contexts
kubectl --kubeconfig ./kubeconfig config get-users
kubectl --kubeconfig ./kubeconfig config get-clusters


// pod，service相关

kubectl create deployment hello-world-service-single  --image=harbor.baijiayun.com/nginx/hello-app:1.0
kubectl scale deployment hello-world-service-single --replicas=2
kubectl expose deployment hello-world-service-single --port=80 --target-port=8080 --type=NodePort
kubectl port-forward [podName]  8080:80


// ingress相关
//(k8s>1.20)
kubectl create ingress ingress-test --rule="wear.my-online-store.com/wear*=wear-service:80"
kubectl get ingressClass
kubectl get ingress
kubectl api-resources|grep ingress

//运维
# 从control 打印加入命令 
kubeadm token create --print-join-command
kubeadm reset # 加入前重置
kubeadm join 10.16.31.253:6443 --token f05gvk.ljmh4fgjirr3i499 --discovery-token-ca-cert-hash sha256:da18e99aa8a87ac9cf1bf86ea2ffa0fafb10cf7cfeb85b24c1d01686f3633bf5



kubectl run mongo --rm -it --image mongo -- sh

mongodb://mongo-0.mongo,mongo-1.mongo,mongo-2.mongo/admin?replicaSet=rs0
kubectl expose pod mongo-0 -n beta-center --port 27017 --target-port 27017 --type NodePort
kubectl expose pod mongo-1 -n beta-center  --port 27017 --target-port 27017 --type NodePort
kubectl expose pod mongo-2 -n beta-center  --port 27017 --target-port 27017 --type NodePort
mongo mongodb://114.67.101.90:32446,114.67.101.90:31915,114.67.101.90:32503
mongosh mongodb://mongo-0.mongo,mongo-1.mongo,mongo-2.mongo



brew tap mongodb/brew
brew install mongodb-community-shell


kubectl run mongocli -n beta-center  --rm -it --image mongo -- sh

kubectl expose pod mongodb-0 -n brtc-monitor --port 27017 --target-port 27017 --type NodePort
kubectl expose pod mongodb-1 -n brtc-monitor  --port 27017 --target-port 27017 --type NodePort
kubectl expose pod mongodb-2 -n brtc-monitor  --port 27017 --target-port 27017 --type NodePort
mongosh mongodb://mongodb-0.mongodb,mongodb-1.mongodb,mongodb-2.mongodb

//备份数据库
mongodump --uri mongodb://mongo-0.mongo,mongo-1.mongo,mongo-2.mongo
//回复
mongorestore --uri mongodb://mongodb-0.mongodb,mongodb-1.mongodb,mongodb-2.mongodb --drop dump

mongo mongodb://114.67.101.90:32024,114.67.101.90:31154,114.67.101.90:30015
 
